# Build stage
FROM node:20-alpine AS builder
WORKDIR /app
COPY package.json ./
COPY package-lock.json ./
RUN npm ci
COPY . .
RUN npm run build

# Production stage
FROM node:20-alpine
WORKDIR /app

# Install dumb-init for proper signal handling in clusters
RUN apk add --no-cache dumb-init

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nestjs -u 1001

COPY package.json ./
COPY package-lock.json ./
RUN npm ci --only=production && npm cache clean --force

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/tsconfig-paths-bootstrap.js ./
COPY --from=builder /app/tsconfig.json ./

# Change ownership to non-root user
RUN chown -R nestjs:nodejs /app
USER nestjs

EXPOSE 3000

# Set production environment
ENV NODE_ENV=production

# Use dumb-init to handle signals properly in clustered environment
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "-r", "./tsconfig-paths-bootstrap.js", "dist/main.js"]
